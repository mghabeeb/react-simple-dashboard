{"version":3,"sources":["images/dashboard.png","components/navbartop/NavbarTop.js","components/scatterchart/ScatterChart.js","actions/index.js","components/linechart/LineChart.js","components/barchart/BarChart.js","components/piechart/PieChart.js","components/cards/Cards.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","reducers/pieChartReducer.js","reducers/scatterChartReducer.js","reducers/lineChartReducer.js","reducers/barChartReducer.js","reducers/cardReducer.js","reducers/index.js","index.js"],"names":["module","exports","NavbarTop","Navbar","bg","variant","Brand","href","alt","src","logo","width","height","className","ScatterChart","options","useSelector","state","scatterChartReducer","series","dispatch","useDispatch","useEffect","data","forEach","elem","dataSeries","dataObject","points","id","point","tempData","push","x","y","type","payload","setScatterSeries","Card","LineChart","lineChartReducer","setLineSeries","BarChart","barChartReducer","axisCategories","usersSpeed","sort","a","b","time","calcSpeed","distance","speed","i","length","next","undefined","Math","sqrt","pow","toFixed","PieChart","pieChartReducer","labels","totalTime","parseInt","round","setPieSeries","setPieOption","Cards","cardValues","cardReducer","totalUsers","JSON","stringify","totalTimeSpent","mostFreqUser","mostFreqUserCount","lessFreqUser","lessFreqUserCount","Number","MAX_VALUE","cardsData","pointsLen","CardDeck","Body","Row","Col","Title","icon","faUsers","color","size","faClock","faCompressArrowsAlt","faCompressAlt","Dashboard","Container","App","Boolean","window","location","hostname","match","initialState","title","text","align","style","fontSize","fontWeight","fontFamily","responsive","breakpoint","legend","position","action","Object","assign","chart","zoom","enabled","xaxis","tickAmount","formatter","val","parseFloat","yaxis","stroke","curve","dashArray","dataLabels","categories","allReducers","combineReducers","store","createStore","allReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c2dcb8f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dashboard.89a73eb8.png\";","import React, { useEffect } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport logo from '../../images/dashboard.png';\r\n\r\nfunction NavbarTop() {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n        />{' '}\r\n        Dashboard\r\n      </Navbar.Brand>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarTop;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setScatterSeries } from '../../actions';\r\nimport data from '../../data/users.json';\r\nimport Chart from \"react-apexcharts\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction ScatterChart() {\r\n  const options = useSelector(state => state.scatterChartReducer.options);\r\n  const series = useSelector(state => state.scatterChartReducer.series);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    data.forEach((elem) => {\r\n      let dataSeries = [];\r\n      let dataObject = {};\r\n      let points = elem.points;\r\n\r\n      dataObject[\"name\"] = elem.id;\r\n\r\n      points.forEach((point) => {\r\n        let tempData = [];\r\n        tempData.push(point.x, point.y)\r\n        dataSeries.push(tempData)\r\n      });\r\n       dataObject[\"data\"] = dataSeries;\r\n\r\n      dispatch(setScatterSeries(dataObject));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Card className=\"shadow\">\r\n      <Chart\r\n          options={options}\r\n          series={series}\r\n          type=\"scatter\"\r\n          />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ScatterChart;\r\n","export const SET_PIE_SERIES = 'SET_PIE_SERIES';\r\nexport const SET_PIE_OPTION = 'SET_PIE_OPTION';\r\nexport const SET_SCATTER_SERIES = 'SET_SCATTER_SERIES';\r\nexport const SET_SCATTER_OPTION = 'SET_SCATTER_OPTION';\r\nexport const SET_LINE_SERIES = 'SET_LINE_SERIES';\r\nexport const SET_LINE_OPTION = 'SET_LINE_OPTION';\r\nexport const SET_BAR_SERIES = 'CREATE_BAR_CHART';\r\nexport const SET_BAR_OPTION = 'SET_BAR_OPTION';\r\nexport const SET_CARD_VALUES = 'SET_CARD_VALUES';\r\n\r\nexport const setPieSeries = (dataSeries) => {\r\n  return {\r\n    type: SET_PIE_SERIES,\r\n    payload: dataSeries\r\n  };\r\n};\r\n\r\nexport const setPieOption = (labels) => {\r\n  return {\r\n    type: SET_PIE_OPTION,\r\n    payload: labels\r\n  };\r\n};\r\n\r\nexport const setScatterSeries = (dataSeries) => {\r\n  return {\r\n    type: SET_SCATTER_SERIES,\r\n    payload: dataSeries\r\n  };\r\n};\r\n\r\nexport const setLineSeries = (dataSeries) => {\r\n  return {\r\n    type: SET_LINE_SERIES,\r\n    payload: dataSeries\r\n  };\r\n};\r\n\r\nexport const setBarSeries = (dataSeries) => {\r\n  return {\r\n    type: SET_BAR_SERIES,\r\n    payload: dataSeries\r\n  };\r\n};\r\n\r\nexport const setBarOption = (labels) => {\r\n  return {\r\n    type: SET_BAR_OPTION,\r\n    payload: labels\r\n  };\r\n};\r\n\r\nexport const setCardValues = (labels) => {\r\n  return {\r\n    type: SET_CARD_VALUES,\r\n    payload: labels\r\n  };\r\n};\r\n\r\n// export const setScatterOption = (labels) => {\r\n//   return {\r\n//     type: SET_SCATTER_OPTION,\r\n//     payload: labels\r\n//   };\r\n// };\r\n\r\n// export const setLineOption = (labels) => {\r\n//   return {\r\n//     type: SET_LINE_OPTION,\r\n//     payload: labels\r\n//   };\r\n// };\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setLineSeries } from '../../actions';\r\nimport data from '../../data/users.json';\r\nimport Chart from \"react-apexcharts\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction LineChart() {\r\n  const options = useSelector(state => state.lineChartReducer.options);\r\n  const series = useSelector(state => state.lineChartReducer.series);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    data.forEach((elem) => {\r\n      let dataSeries = [];\r\n      let dataObject = {};\r\n      let points = elem.points;\r\n\r\n      dataObject[\"name\"] = elem.id;\r\n\r\n      points.forEach((point) => {\r\n        let tempData = [];\r\n        tempData.push(point.x, point.y)\r\n        dataSeries.push(tempData)\r\n      });\r\n      dataObject[\"data\"] = dataSeries;\r\n\r\n      dispatch(setLineSeries(dataObject));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Card className=\"shadow\">\r\n      <Chart\r\n          options={options}\r\n          series={series}\r\n          type=\"line\"\r\n          />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setBarSeries, setBarOption } from '../../actions';\r\nimport data from '../../data/users.json';\r\nimport Chart from \"react-apexcharts\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction BarChart() {\r\n  const options = useSelector(state => state.barChartReducer.options);\r\n  const series = useSelector(state => state.barChartReducer.series);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let axisCategories = [];\r\n    let usersSpeed = [];\r\n\r\n    data.forEach((elem) => {\r\n      let points = elem.points;\r\n\r\n      points.sort(function(a, b) {\r\n        return a.time > b.time ? 1 : -1;\r\n      });\r\n\r\n      usersSpeed.push(calcSpeed(points));\r\n      axisCategories.push(elem.id)\r\n    });\r\n\r\n    dispatch(setBarSeries(usersSpeed));\r\n    dispatch(setBarOption(axisCategories));\r\n\r\n  }, []);\r\n\r\n  const calcSpeed = (points) => {\r\n    let distance = 0;\r\n    let time = 0;\r\n    let speed = 0;\r\n    for(let i = 0; i < points.length; i++)\r\n      {\r\n         let next = points[i + 1];\r\n         if(next !== undefined){\r\n            distance += Math.sqrt( Math.pow((points[i].x - next.x), 2) + Math.pow((points[i].y - next.y), 2) );\r\n         }\r\n      }\r\n      time = points[points.length - 1].time - points[0].time;\r\n      speed = distance / time;\r\n      speed = speed * 60;\r\n      return speed.toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"shadow\">\r\n      <Chart\r\n          options={options}\r\n          series={series}\r\n          type=\"bar\"\r\n          />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setPieSeries, setPieOption } from '../../actions';\r\nimport data from '../../data/users.json';\r\nimport Chart from \"react-apexcharts\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction PieChart() {\r\n  const options = useSelector(state => state.pieChartReducer.options);\r\n  const series = useSelector(state => state.pieChartReducer.series);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let dataSeries = [];\r\n    let labels = [];\r\n\r\n    data.forEach((elem) => {\r\n      let totalTime = 0;\r\n      let points = elem.points;\r\n\r\n      points.forEach((point) => {\r\n        totalTime += parseInt(point.time);\r\n      });\r\n      totalTime = totalTime / 60;\r\n      totalTime = (totalTime / 15) * 15;\r\n\r\n      dataSeries.push(Math.round(totalTime));\r\n      labels.push(elem.id);\r\n\r\n      dispatch(setPieSeries(dataSeries));\r\n      dispatch(setPieOption(labels));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Card className=\"shadow\">\r\n      <Chart\r\n          options={options}\r\n          series={series}\r\n          type=\"donut\"\r\n          />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCardValues } from '../../actions';\r\nimport './Cards.css';\r\nimport data from '../../data/users.json';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers, faClock, faCompressArrowsAlt, faCompressAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Cards() {\r\n  const cardValues = useSelector(state => state.cardReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let totalUsers = JSON.stringify(data.length);\r\n    let totalTimeSpent = 0;\r\n    let mostFreqUser = '';\r\n    let mostFreqUserCount = 0;\r\n    let lessFreqUser = '';\r\n    let lessFreqUserCount = Number.MAX_VALUE;\r\n    let cardsData = {};\r\n    data.forEach((elem) => {\r\n      let points = elem.points;\r\n      let pointsLen = points.length;\r\n\r\n      if(pointsLen > mostFreqUserCount){\r\n        mostFreqUserCount = pointsLen;\r\n        mostFreqUser = elem.id\r\n      }\r\n      if(pointsLen < lessFreqUserCount){\r\n        lessFreqUserCount = pointsLen;\r\n        lessFreqUser = elem.id\r\n      }\r\n\r\n      points.forEach((point) => {\r\n          totalTimeSpent += parseInt(point.time)\r\n      });\r\n    });\r\n    cardsData['totalUsers'] = totalUsers;\r\n    cardsData['totalTimeSpent'] = Math.round(totalTimeSpent / 3600);\r\n    cardsData['mostFreqUser'] = mostFreqUser;\r\n    cardsData['mostFreqUserCount'] = mostFreqUserCount;\r\n    cardsData['lessFreqUser'] = lessFreqUser;\r\n    cardsData['lessFreqUserCount'] = lessFreqUserCount;\r\n\r\n    dispatch(setCardValues(cardsData));\r\n  }, []);\r\n\r\n  return (\r\n    <CardDeck>\r\n        <Card className=\"shadow border-left-primary\">\r\n          <Card.Body>\r\n            <Row className=\"align-items-center no-margins\">\r\n              <Col className=\"mr-2 text-left\">\r\n                <Card.Title>Number of users</Card.Title>\r\n                <Card.Title className=\"title-result\">{cardValues.totalUsers}</Card.Title>\r\n              </Col>\r\n              <div ><FontAwesomeIcon icon={faUsers} color=\"royalblue\" size=\"lg\" /></div>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"shadow border-left-success\">\r\n          <Card.Body>\r\n            <Row className=\"align-items-center no-margins\">\r\n              <Col className=\"mr-2 text-left\">\r\n                <Card.Title>Total Time Spent</Card.Title>\r\n                <Card.Title className=\"title-result\">{cardValues.totalTimeSpent} Hours</Card.Title>\r\n              </Col>\r\n              <div><FontAwesomeIcon icon={faClock} color=\"green\" size=\"lg\" /></div>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"shadow border-left-warning\">\r\n          <Card.Body>\r\n            <Row className=\"align-items-center no-margins\">\r\n              <Col className=\"mr-2 text-left\">\r\n                <Card.Title>Most Frequent User</Card.Title>\r\n                <Card.Title className=\"title-result\">{cardValues.mostFreqUser} ({cardValues.mostFreqUserCount} Moves)</Card.Title>\r\n              </Col>\r\n              <div><FontAwesomeIcon icon={faCompressArrowsAlt} color=\"orange\" size=\"lg\" /></div>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card className=\"shadow border-left-info\">\r\n          <Card.Body>\r\n            <Row className=\"align-items-center no-margins\">\r\n              <Col className=\"mr-2 text-left\">\r\n                <Card.Title>Less Frequent User</Card.Title>\r\n                <Card.Title className=\"title-result\">{cardValues.lessFreqUser} ({cardValues.lessFreqUserCount} Moves)</Card.Title>\r\n              </Col>\r\n              <div><FontAwesomeIcon icon={faCompressAlt} color=\"lightblue\" size=\"lg\" /></div>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n    </CardDeck>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport NavbarTop from '../navbartop/NavbarTop';\r\nimport ScatterChart from '../scatterchart/ScatterChart';\r\nimport LineChart from '../linechart/LineChart';\r\nimport BarChart from '../barchart/BarChart';\r\nimport PieChart from '../piechart/PieChart';\r\nimport Cards from '../cards/Cards';\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div>\r\n      <NavbarTop />\r\n      <Container>\r\n        <br /> <br />\r\n        <Cards />\r\n        <br /> <br />\r\n        <Row>\r\n          <Col>\r\n            <ScatterChart />\r\n          </Col>\r\n          <Col>\r\n            <LineChart />\r\n          </Col>\r\n        </Row>\r\n        <br /> <br />\r\n        <Row>\r\n          <Col>\r\n            <BarChart />\r\n          </Col>\r\n          <Col>\r\n            <PieChart />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <Dashboard />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_PIE_SERIES, SET_PIE_OPTION } from '../actions'\r\n\r\nconst initialState = {\r\n  series: [],\r\n  options: {\r\n    title: {\r\n      text: 'Total Users Time (Minutes)',\r\n      align: 'center',\r\n      style: {\r\n        fontSize:  '14px',\r\n        fontWeight:  'bold',\r\n        fontFamily:  undefined,\r\n      },\r\n    },\r\n    responsive: [{\r\n      breakpoint: 480,\r\n      options: {\r\n        legend: {\r\n          position: 'right',\r\n        }\r\n      }\r\n    }]\r\n  },\r\n}\r\n\r\nconst pieChartReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case SET_PIE_SERIES:\r\n      return Object.assign({}, state, {\r\n        series: action.payload\r\n      })\r\n    case SET_PIE_OPTION:\r\n      return Object.assign({}, state, {\r\n        options: {\r\n          ...state.options,\r\n          labels: action.payload\r\n        },\r\n      })\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport default pieChartReducer;\r\n","import { SET_SCATTER_SERIES, SET_SCATTER_OPTION } from '../actions'\r\n\r\nconst initialState = {\r\n  series: [],\r\n  options: {\r\n    chart: {\r\n      type: 'scatter',\r\n      zoom: {\r\n        enabled: true,\r\n        type: 'xy'\r\n      }\r\n    },\r\n    xaxis: {\r\n      tickAmount: 10,\r\n      labels: {\r\n        formatter: function(val) {\r\n          return parseFloat(val).toFixed(2)\r\n        }\r\n      },\r\n      title: {\r\n        text: \"X Axis\",\r\n        style: {\r\n          color: '#008FFB',\r\n        }\r\n      },\r\n    },\r\n    yaxis: {\r\n      tickAmount: 7,\r\n      title: {\r\n        text: \"Y Axis\",\r\n        style: {\r\n          color: '#008FFB',\r\n        }\r\n      },\r\n    },\r\n    title: {\r\n      text: 'Scatter Chart Users Patterns',\r\n      align: 'center',\r\n      style: {\r\n        fontSize:  '14px',\r\n        fontWeight:  'bold',\r\n        fontFamily:  undefined,\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nconst scatterChartReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n\r\n    case SET_SCATTER_SERIES:\r\n      return Object.assign({}, state, {\r\n        series: [...state.series, action.payload]\r\n      })\r\n    case SET_SCATTER_OPTION:\r\n      return Object.assign({}, state, {\r\n        options: {\r\n          ...state.options,\r\n          labels: action.payload\r\n        },\r\n      })\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport default scatterChartReducer;\r\n","import { SET_LINE_SERIES, SET_LINE_OPTION } from '../actions'\r\n\r\nconst initialState = {\r\n  series: [],\r\n  options: {\r\n    chart: {\r\n      type: 'line',\r\n      zoom: {\r\n        enabled: true\r\n      },\r\n    },\r\n    stroke: {\r\n      width: [3,3,3,3,3],\r\n      curve: 'straight',\r\n      dashArray: [5,5,5,5,5]\r\n    },\r\n    xaxis: {\r\n      tickAmount: 10,\r\n      labels: {\r\n        formatter: function(val) {\r\n          return parseFloat(val).toFixed(2)\r\n        }\r\n      },\r\n      title: {\r\n        text: \"X Axis\",\r\n        style: {\r\n          color: '#008FFB',\r\n        }\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: \"Y Axis\",\r\n        style: {\r\n          color: '#008FFB',\r\n        }\r\n      },\r\n    },\r\n    title: {\r\n      text: 'Users Patterns Line Chart',\r\n      align: 'center',\r\n      style: {\r\n        fontSize:  '14px',\r\n        fontWeight:  'bold',\r\n        fontFamily:  undefined,\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nconst lineChartReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n\r\n    case SET_LINE_SERIES:\r\n      return Object.assign({}, state, {\r\n        series: [...state.series, action.payload]\r\n      })\r\n    case SET_LINE_OPTION:\r\n      return Object.assign({}, state, {\r\n        options: {\r\n          ...state.options,\r\n          labels: action.payload\r\n        },\r\n      })\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport default lineChartReducer;\r\n","import { SET_BAR_SERIES, SET_BAR_OPTION } from '../actions'\r\n\r\nconst initialState = {\r\n  series: [],\r\n  options: {\r\n    title: {\r\n      text: 'Total Users Speed',\r\n      align: 'center',\r\n      style: {\r\n        fontSize:  '14px',\r\n        fontWeight:  'bold',\r\n        fontFamily:  undefined,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    xaxis: {\r\n      title: {\r\n        text: \"Users\",\r\n        style: {\r\n          color: '#008FFB',\r\n        }\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: \"Meter / Minute\",\r\n        style: {\r\n          color: '#008FFB',\r\n        }\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nconst barChartReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n\r\n    case SET_BAR_SERIES:\r\n      return Object.assign({}, state, {\r\n        series: [{data: action.payload}]\r\n      })\r\n    case SET_BAR_OPTION:\r\n      return Object.assign({}, state, {\r\n        options: {\r\n          ...state.options,\r\n          xaxis: {categories: action.payload}\r\n        },\r\n      })\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport default barChartReducer;\r\n","import { SET_CARD_VALUES } from '../actions'\r\n\r\nconst initialState = {\r\n  totalUsers: 0,\r\n  totalTimeSpent: 0,\r\n  mostFreqUser: '',\r\n  mostFreqUserCount: 0,\r\n  lessFreqUser: '',\r\n  lessFreqUserCount: 0,\r\n}\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n\r\n    case SET_CARD_VALUES:\r\n      return Object.assign({}, state, {\r\n        totalUsers: action.payload['totalUsers'],\r\n        totalTimeSpent: action.payload['totalTimeSpent'],\r\n        mostFreqUser: action.payload['mostFreqUser'],\r\n        mostFreqUserCount: action.payload['mostFreqUserCount'],\r\n        lessFreqUser: action.payload['lessFreqUser'],\r\n        lessFreqUserCount: action.payload['lessFreqUserCount'],\r\n      })\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport default cardReducer;\r\n","import pieChartReducer from './pieChartReducer';\r\nimport scatterChartReducer from './scatterChartReducer';\r\nimport lineChartReducer from './lineChartReducer';\r\nimport barChartReducer from './barChartReducer';\r\nimport cardReducer from './cardReducer';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n  pieChartReducer,\r\n  scatterChartReducer,\r\n  lineChartReducer,\r\n  barChartReducer,\r\n  cardReducer\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducer from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(allReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}